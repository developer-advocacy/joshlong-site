name: Deploy

env:
  API_ROOT: https://api.joshlong.com
  APP_NAME: joshlong-site
  GKE_CLUSTER:   ${{ secrets.GKE_CLUSTER }}
  GCLOUD_ZONE:  ${{ secrets.GCLOUD_ZONE }}
  NS_NAME:  ${{ secrets.NS_NAME }}
  GCLOUD_SA_KEY:  ${{ secrets.GCLOUD_SA_KEY }}

on:
  push:
    branches: [ main ]



jobs:

  build-and-deploy:
  
    permissions:
      contents: 'read'
      id-token: 'write'
  
    name: Setup and Deploy
  
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GCLOUD_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          kubectl get pods

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Deploy Site
        run: |
          kubectl get ns/$NS_NAME || kubectl create ns $NS_NAME 
          kubectl config set-context --current --namespace=$NS_NAME
          kubectl config view --minify | grep "namespace:" && echo "found the namespace.."
          cd $GITHUB_WORKSPACE
          export PATH=$GITHUB_WORKSPACE/bin/:$PATH
          mkdir -p $GITHUB_WORKSPACE/bin/
          (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.29.0/pack-v0.29.0-linux.tgz" | sudo tar -C  $GITHUB_WORKSPACE/bin/ --no-same-owner -xzv pack)
          export ROOT_DIR=$GITHUB_WORKSPACE
          ./deploy/deploy.sh
